apiVersion: v1
kind: Namespace
metadata:
  name: k8s-metrics
---
# Source: kube-otel-stack/charts/kube-state-metrics/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:    
    helm.sh/chart: kube-state-metrics-4.20.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: kube-otel-stack
    app.kubernetes.io/version: "2.6.0"
    release: kube-otel-stack
  name: kube-otel-stack-kube-state-metrics
  namespace: k8s-metrics
imagePullSecrets:
  []
---
# Source: kube-otel-stack/charts/prometheus-node-exporter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-otel-stack-prometheus-node-exporter
  namespace: k8s-metrics
  labels:
    helm.sh/chart: prometheus-node-exporter-4.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: prometheus-node-exporter
    app.kubernetes.io/instance: kube-otel-stack
    app.kubernetes.io/name: prometheus-node-exporter
    app.kubernetes.io/version: "1.3.1"
    jobLabel: node-exporter
    release: kube-otel-stack
  annotations:
    {}
imagePullSecrets:
  []
---
# Source: kube-otel-stack/charts/kube-state-metrics/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:    
    helm.sh/chart: kube-state-metrics-4.20.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: kube-otel-stack
    app.kubernetes.io/version: "2.6.0"
    release: kube-otel-stack
  name: kube-otel-stack-kube-state-metrics
rules:

- apiGroups: ["certificates.k8s.io"]
  resources:
  - certificatesigningrequests
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["list", "watch"]

- apiGroups: ["batch"]
  resources:
  - cronjobs
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "apps"]
  resources:
  - daemonsets
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "apps"]
  resources:
  - deployments
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - endpoints
  verbs: ["list", "watch"]

- apiGroups: ["autoscaling"]
  resources:
  - horizontalpodautoscalers
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "networking.k8s.io"]
  resources:
  - ingresses
  verbs: ["list", "watch"]

- apiGroups: ["batch"]
  resources:
  - jobs
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - limitranges
  verbs: ["list", "watch"]

- apiGroups: ["admissionregistration.k8s.io"]
  resources:
    - mutatingwebhookconfigurations
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - namespaces
  verbs: ["list", "watch"]

- apiGroups: ["networking.k8s.io"]
  resources:
  - networkpolicies
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - nodes
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - persistentvolumeclaims
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - persistentvolumes
  verbs: ["list", "watch"]

- apiGroups: ["policy"]
  resources:
    - poddisruptionbudgets
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - pods
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "apps"]
  resources:
  - replicasets
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - replicationcontrollers
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - resourcequotas
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - secrets
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - services
  verbs: ["list", "watch"]

- apiGroups: ["apps"]
  resources:
  - statefulsets
  verbs: ["list", "watch"]

- apiGroups: ["storage.k8s.io"]
  resources:
    - storageclasses
  verbs: ["list", "watch"]

- apiGroups: ["admissionregistration.k8s.io"]
  resources:
    - validatingwebhookconfigurations
  verbs: ["list", "watch"]

- apiGroups: ["storage.k8s.io"]
  resources:
    - volumeattachments
  verbs: ["list", "watch"]
---
# Source: kube-otel-stack/templates/collector.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "kube-otel-stack-metrics"
rules:
- apiGroups: [""]
  resources:
  - namespaces
  - nodes
  - nodes/proxy
  - nodes/metrics
  - services
  - endpoints
  - pods
  - events
  - secrets
  verbs: ["get", "list", "watch"]
- apiGroups: ["monitoring.coreos.com"]
  resources:
  - servicemonitors
  - podmonitors
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs: ["get", "list", "watch"]
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources:
  - endpointslices
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics", "/metrics/cadvisor"]
  verbs: ["get"]
---
# Source: kube-otel-stack/charts/kube-state-metrics/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:    
    helm.sh/chart: kube-state-metrics-4.20.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: kube-otel-stack
    app.kubernetes.io/version: "2.6.0"
    release: kube-otel-stack
  name: kube-otel-stack-kube-state-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-otel-stack-kube-state-metrics
subjects:
- kind: ServiceAccount
  name: kube-otel-stack-kube-state-metrics
  namespace: k8s-metrics
---
# Source: kube-otel-stack/templates/collector.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "kube-otel-stack-metrics"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "kube-otel-stack-metrics"
subjects:
- kind: ServiceAccount
  # quirk of the Operator
  name: "kube-otel-stack-metrics-collector"
  namespace: k8s-metrics
- kind: ServiceAccount
  name: kube-otel-stack-metrics-targetallocator
  namespace: k8s-metrics
---
# Source: kube-otel-stack/charts/kube-state-metrics/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kube-otel-stack-kube-state-metrics
  namespace: k8s-metrics
  labels:    
    helm.sh/chart: kube-state-metrics-4.20.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: kube-otel-stack
    app.kubernetes.io/version: "2.6.0"
    release: kube-otel-stack
  annotations:
    prometheus.io/scrape: 'true'
spec:
  type: "ClusterIP"
  ports:
  - name: "http"
    protocol: TCP
    port: 8080
    targetPort: 8080
  
  selector:    
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: kube-otel-stack
---
# Source: kube-otel-stack/charts/prometheus-node-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kube-otel-stack-prometheus-node-exporter
  namespace: k8s-metrics
  labels:     
    helm.sh/chart: prometheus-node-exporter-4.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: prometheus-node-exporter
    app.kubernetes.io/instance: kube-otel-stack
    app.kubernetes.io/name: prometheus-node-exporter
    app.kubernetes.io/version: "1.3.1"
    jobLabel: node-exporter
    release: kube-otel-stack
  annotations:
    prometheus.io/scrape: "true"
spec:
  type: ClusterIP
  ports:
    - port: 9100
      targetPort: 9100
      protocol: TCP
      name: http-metrics
  selector:    
    app.kubernetes.io/instance: kube-otel-stack
    app.kubernetes.io/name: prometheus-node-exporter
---
# Source: kube-otel-stack/templates/exporters/core-dns/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kube-otel-stack-coredns
  labels:
    app: kube-otel-stack-coredns
    jobLabel: coredns
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: kube-otel-stack
    app.kubernetes.io/version: "0.4.1"
    app.kubernetes.io/part-of: kube-otel-stack
    chart: kube-otel-stack-0.4.1
    release: "kube-otel-stack"
    heritage: "Helm"
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: http-metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
  selector:
    k8s-app: kube-dns
---
# Source: kube-otel-stack/templates/exporters/kube-controller-manager/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kube-otel-stack-kube-controller-manager
  labels:
    app: kube-otel-stack-kube-controller-manager
    jobLabel: kube-controller-manager
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: kube-otel-stack
    app.kubernetes.io/version: "0.4.1"
    app.kubernetes.io/part-of: kube-otel-stack
    chart: kube-otel-stack-0.4.1
    release: "kube-otel-stack"
    heritage: "Helm"
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: http-metrics
      port: 10257
      protocol: TCP
      targetPort: 10257
  selector:
    component: kube-controller-manager
  type: ClusterIP
---
# Source: kube-otel-stack/templates/exporters/kube-etcd/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kube-otel-stack-kube-etcd
  labels:
    app: kube-otel-stack-kube-etcd
    jobLabel: kube-etcd
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: kube-otel-stack
    app.kubernetes.io/version: "0.4.1"
    app.kubernetes.io/part-of: kube-otel-stack
    chart: kube-otel-stack-0.4.1
    release: "kube-otel-stack"
    heritage: "Helm"
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: http-metrics
      port: 2381
      protocol: TCP
      targetPort: 2381
  selector:
    component: etcd
  type: ClusterIP
---
# Source: kube-otel-stack/templates/exporters/kube-proxy/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kube-otel-stack-kube-proxy
  labels:
    app: kube-otel-stack-kube-proxy
    jobLabel: kube-proxy
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: kube-otel-stack
    app.kubernetes.io/version: "0.4.1"
    app.kubernetes.io/part-of: kube-otel-stack
    chart: kube-otel-stack-0.4.1
    release: "kube-otel-stack"
    heritage: "Helm"
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: http-metrics
      port: 10249
      protocol: TCP
      targetPort: 10249
  selector:
    k8s-app: kube-proxy
  type: ClusterIP
---
# Source: kube-otel-stack/charts/prometheus-node-exporter/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-otel-stack-prometheus-node-exporter
  namespace: k8s-metrics
  labels:     
    helm.sh/chart: prometheus-node-exporter-4.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: prometheus-node-exporter
    app.kubernetes.io/instance: kube-otel-stack
    app.kubernetes.io/name: prometheus-node-exporter
    app.kubernetes.io/version: "1.3.1"
    jobLabel: node-exporter
    release: kube-otel-stack
spec:
  selector:
    matchLabels:      
      app.kubernetes.io/instance: kube-otel-stack
      app.kubernetes.io/name: prometheus-node-exporter
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:         
        helm.sh/chart: prometheus-node-exporter-4.3.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: metrics
        app.kubernetes.io/part-of: prometheus-node-exporter
        app.kubernetes.io/instance: kube-otel-stack
        app.kubernetes.io/name: prometheus-node-exporter
        app.kubernetes.io/version: "1.3.1"
        jobLabel: node-exporter
        release: kube-otel-stack
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      automountServiceAccountToken: false
      serviceAccountName: kube-otel-stack-prometheus-node-exporter
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      containers:
        - name: node-exporter
          image: quay.io/prometheus/node-exporter:v1.3.1
          imagePullPolicy: IfNotPresent
          args:
            - --path.procfs=/host/proc
            - --path.sysfs=/host/sys
            - --path.rootfs=/host/root
            - --web.listen-address=[$(HOST_IP)]:9100
            - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
            - --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
          env:
          - name: HOST_IP
            value: 0.0.0.0
          ports:
            - name: http-metrics
              containerPort: 9100
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              path: /
              port: 9100
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              path: /
              port: 9100
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            {}
          volumeMounts:
            - name: proc
              mountPath: /host/proc
              readOnly:  true
            - name: sys
              mountPath: /host/sys
              readOnly: true
            - name: root
              mountPath: /host/root
              mountPropagation: HostToContainer
              readOnly: true
      hostNetwork: true
      hostPID: true
      tolerations:
        - effect: NoSchedule
          operator: Exists
      volumes:
        - name: proc
          hostPath:
            path: /proc
        - name: sys
          hostPath:
            path: /sys
        - name: root
          hostPath:
            path: /
---
# Source: kube-otel-stack/charts/kube-state-metrics/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-otel-stack-kube-state-metrics
  namespace: k8s-metrics
  labels:    
    helm.sh/chart: kube-state-metrics-4.20.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: kube-otel-stack
    app.kubernetes.io/version: "2.6.0"
    release: kube-otel-stack
spec:
  selector:
    matchLabels:      
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/instance: kube-otel-stack
  replicas: 1
  template:
    metadata:
      labels:        
        helm.sh/chart: kube-state-metrics-4.20.2
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: metrics
        app.kubernetes.io/part-of: kube-state-metrics
        app.kubernetes.io/name: kube-state-metrics
        app.kubernetes.io/instance: kube-otel-stack
        app.kubernetes.io/version: "2.6.0"
        release: kube-otel-stack
    spec:
      hostNetwork: false
      serviceAccountName: kube-otel-stack-kube-state-metrics
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsUser: 65534
      containers:
      - name: kube-state-metrics
        args:
        - --port=8080
        - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
        imagePullPolicy: IfNotPresent
        image: "registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.6.0"
        ports:
        - containerPort: 8080
          name: "http"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
---
# Source: kube-otel-stack/templates/collector.yaml
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: "kube-otel-stack-metrics"
  labels:    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: kube-otel-stack
    app.kubernetes.io/version: "0.4.1"
    app.kubernetes.io/part-of: kube-otel-stack
    chart: kube-otel-stack-0.4.1
    release: "kube-otel-stack"
    heritage: "Helm"
  namespace: k8s-metrics
spec:
  mode: statefulset
  image: otel/opentelemetry-collector-contrib:0.93.0
  replicas: 3
  ports:
    - name: "metrics"
      protocol: TCP
      port: 8888
  targetAllocator:
    enabled: true
    serviceAccount: kube-otel-stack-kube-state-metrics
    # image: ghcr.io/open-telemetry/opentelemetry-operator/target-allocator:0.88.0
    image: ghcr.io/open-telemetry/opentelemetry-operator/target-allocator:0.94.0
    replicas: 2
    allocationStrategy: consistent-hashing
    prometheusCR:
      enabled: true
  env:
    - name: LS_TOKEN
      valueFrom:
        secretKeyRef:
          key: LS_TOKEN
          name: otel-collector-secret
    - name: OTEL_K8S_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    - name: OTEL_K8S_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    - name: OTEL_K8S_POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: OTEL_K8S_POD_UID
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.uid
    - name: OTEL_K8S_POD_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.podIP
    - name: OTEL_RESOURCE_ATTRIBUTES
      value: "k8s.cluster.name=unknown"
  config: |
    exporters:
      otlp:
        endpoint: ingest.lightstep.com:443
        headers:
          lightstep-access-token: ${LS_TOKEN}
    extensions:
      health_check:
        check_collector_pipeline:
          enabled: false
          exporter_failure_threshold: 5
          interval: 5m
        endpoint: 0.0.0.0:13133
        path: /
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
      prometheus:
        config:
          scrape_configs:
          
          
          # This is used for scrape kubelet
          - authorization:
              credentials_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
              type: Bearer
            follow_redirects: true
            honor_labels: true
            honor_timestamps: true
            job_name: serviceMonitor/opentelemetry/kube-otel-stack-kubelet/0
            kubernetes_sd_configs:
            - follow_redirects: true
              kubeconfig_file: ''
              role: node
            metrics_path: "/metrics"
            relabel_configs:
            - action: replace
              regex: "(.*)"
              replacement: "$1"
              separator: ";"
              source_labels:
              - job
              target_label: __tmp_prometheus_job_name
            - action: replace
              replacement: "kubelet"
              target_label: job
            - action: replace
              regex: "(.*)"
              replacement: "${1}"
              separator: ";"
              source_labels:
              - __meta_kubernetes_node_name
              target_label: node
            - action: replace
              regex: "(.*)"
              replacement: https-metrics
              separator: ";"
              target_label: endpoint
            - action: replace
              regex: "(.*)"
              replacement: "$1"
              separator: ";"
              source_labels:
              - __metrics_path__
              target_label: metrics_path
            - action: hashmod
              modulus: 1
              regex: "(.*)"
              replacement: "$1"
              separator: ";"
              source_labels:
              - __address__
              target_label: __tmp_hash
            - action: keep
              regex: "$(SHARD)"
              replacement: "$1"
              separator: ";"
              source_labels:
              - __tmp_hash
            scheme: https
            scrape_interval: 30s
            scrape_timeout: 10s
            tls_config:
              ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
              insecure_skip_verify: true
          
          - authorization:
              credentials_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
              type: Bearer
            follow_redirects: true
            honor_labels: true
            honor_timestamps: true
            job_name: serviceMonitor/opentelemetry/kube-otel-stack-kubelet/1
            kubernetes_sd_configs:
            - follow_redirects: true
              kubeconfig_file: ''
              role: node
            metric_relabel_configs:
            - action: drop
              regex: container_cpu_(cfs_throttled_seconds_total|load_average_10s|system_seconds_total|user_seconds_total)
              replacement: "$1"
              separator: ";"
              source_labels:
              - __name__
            - action: drop
              regex: container_fs_(io_current|io_time_seconds_total|io_time_weighted_seconds_total|reads_merged_total|sector_reads_total|sector_writes_total|writes_merged_total)
              replacement: "$1"
              separator: ";"
              source_labels:
              - __name__
            - action: drop
              regex: container_memory_(mapped_file|swap)
              replacement: "$1"
              separator: ";"
              source_labels:
              - __name__
            - action: drop
              regex: container_(file_descriptors|tasks_state|threads_max)
              replacement: "$1"
              separator: ";"
              source_labels:
              - __name__
            - action: drop
              regex: container_spec.*
              replacement: "$1"
              separator: ";"
              source_labels:
              - __name__
            - action: drop
              regex: ".+;"
              replacement: "$1"
              separator: ";"
              source_labels:
              - id
              - pod
            metrics_path: "/metrics/cadvisor"
            relabel_configs:
            - action: replace
              regex: "(.*)"
              replacement: "$1"
              separator: ";"
              source_labels:
              - job
              target_label: __tmp_prometheus_job_name
            - action: replace
              replacement: "kubelet"
              target_label: job
            - action: replace
              regex: "(.*)"
              replacement: "${1}"
              separator: ";"
              source_labels:
              - __meta_kubernetes_node_name
              target_label: node
            - action: replace
              regex: "(.*)"
              replacement: https-metrics
              separator: ";"
              target_label: endpoint
            - action: replace
              regex: "(.*)"
              replacement: "$1"
              separator: ";"
              source_labels:
              - __metrics_path__
              target_label: metrics_path
            - action: hashmod
              modulus: 1
              regex: "(.*)"
              replacement: "$1"
              separator: ";"
              source_labels:
              - __address__
              target_label: __tmp_hash
            - action: keep
              regex: "$(SHARD)"
              replacement: "$1"
              separator: ";"
              source_labels:
              - __tmp_hash
            scheme: https
            scrape_interval: 30s
            scrape_timeout: 10s
            tls_config:
              ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
              insecure_skip_verify: true
          
          - authorization:
              credentials_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
              type: Bearer
            follow_redirects: true
            honor_labels: true
            honor_timestamps: true
            job_name: serviceMonitor/opentelemetry/kube-otel-stack-kubelet/2
            kubernetes_sd_configs:
            - follow_redirects: true
              kubeconfig_file: ''
              role: node
            metrics_path: "/metrics/probes"
            relabel_configs:
            - action: replace
              regex: "(.*)"
              replacement: "$1"
              separator: ";"
              source_labels:
              - job
              target_label: __tmp_prometheus_job_name
            - action: replace
              replacement: "kubelet"
              target_label: job
            - action: replace
              regex: "(.*)"
              replacement: "${1}"
              separator: ";"
              source_labels:
              - __meta_kubernetes_node_name
              target_label: node
            - action: replace
              regex: "(.*)"
              replacement: https-metrics
              separator: ";"
              target_label: endpoint
            - action: replace
              regex: "(.*)"
              replacement: "$1"
              separator: ";"
              source_labels:
              - __metrics_path__
              target_label: metrics_path
            - action: hashmod
              modulus: 1
              regex: "(.*)"
              replacement: "$1"
              separator: ";"
              source_labels:
              - __address__
              target_label: __tmp_hash
            - action: keep
              regex: "$(SHARD)"
              replacement: "$1"
              separator: ";"
              source_labels:
              - __tmp_hash
            scheme: https
            scrape_interval: 30s
            scrape_timeout: 10s
            tls_config:
              ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
              insecure_skip_verify: true
          
        target_allocator:
          endpoint: http://kube-otel-stack-metrics-targetallocator:80
          interval: 30s
          collector_id: ${POD_NAME}
          http_sd_config:
            refresh_interval: 60s
        
        
    processors:
      batch:
        send_batch_max_size: 1500
        send_batch_size: 1000
        timeout: 1s
      k8sattributes:
        extract:
          metadata:
          - k8s.namespace.name
          - k8s.pod.name
          - k8s.pod.uid
          - k8s.node.name
          - k8s.pod.start_time
          - k8s.deployment.name
          - k8s.replicaset.name
          - k8s.replicaset.uid
          - k8s.daemonset.name
          - k8s.daemonset.uid
          - k8s.job.name
          - k8s.job.uid
          - k8s.cronjob.name
          - k8s.statefulset.name
          - k8s.statefulset.uid
          - container.image.tag
          - container.image.name
        passthrough: false
        pod_association:
        - sources:
          - from: resource_attribute
            name: k8s.pod.name
      metricstransform/k8sservicename:
        transforms:
        - action: update
          include: kube_service_info
          match_type: strict
          operations:
          - action: update_label
            label: service
            new_label: k8s.service.name
      resource:
        attributes:
        - action: insert
          key: lightstep.helm_chart
          value: kube-otel-stack
        - action: insert
          from_attribute: service.name
          key: job
      resourcedetection/env:
        detectors:
        - env
        override: false
        timeout: 2s
    service:
      extensions:
      - health_check
      pipelines:
        metrics:
          exporters:
          - otlp
          processors:
          - resource
          - resourcedetection/env
          - k8sattributes
          - metricstransform/k8sservicename
          - batch
          receivers:
          - prometheus
          - otlp
  resources:
    limits:
      cpu: 250m
      memory: 500Mi
    requests:
      cpu: 250m
      memory: 500Mi
---
# Source: kube-otel-stack/charts/kube-state-metrics/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kube-otel-stack-kube-state-metrics
  namespace: k8s-metrics
  labels:    
    helm.sh/chart: kube-state-metrics-4.20.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: kube-otel-stack
    app.kubernetes.io/version: "2.6.0"
    release: kube-otel-stack
spec:
  jobLabel: app.kubernetes.io/name
  selector:
    matchLabels:      
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/instance: kube-otel-stack
  endpoints:
    - port: http
      honorLabels: true
---
# Source: kube-otel-stack/charts/prometheus-node-exporter/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kube-otel-stack-prometheus-node-exporter
  namespace: k8s-metrics
  labels:     
    helm.sh/chart: prometheus-node-exporter-4.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: prometheus-node-exporter
    app.kubernetes.io/instance: kube-otel-stack
    app.kubernetes.io/name: prometheus-node-exporter
    app.kubernetes.io/version: "1.3.1"
    jobLabel: node-exporter
    release: kube-otel-stack
spec:
  jobLabel: jobLabel
  selector:
    matchLabels:
            
      app.kubernetes.io/instance: kube-otel-stack
      app.kubernetes.io/name: prometheus-node-exporter
  endpoints:
    - port: http-metrics
      scheme: http
---
# Source: kube-otel-stack/templates/exporters/core-dns/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kube-otel-stack-coredns
  namespace: k8s-metrics
  labels:
    app: kube-otel-stack-coredns
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: kube-otel-stack
    app.kubernetes.io/version: "0.4.1"
    app.kubernetes.io/part-of: kube-otel-stack
    chart: kube-otel-stack-0.4.1
    release: "kube-otel-stack"
    heritage: "Helm"
spec:
  jobLabel: jobLabel
  selector:
    matchLabels:
      app: kube-otel-stack-coredns
      release: "kube-otel-stack"
  namespaceSelector:
    matchNames:
      - "kube-system"
  endpoints:
  - port: http-metrics
    bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
---
# Source: kube-otel-stack/templates/exporters/kube-api-server/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kube-otel-stack-apiserver
  namespace: k8s-metrics
  labels:
    app: kube-otel-stack-apiserver
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: kube-otel-stack
    app.kubernetes.io/version: "0.4.1"
    app.kubernetes.io/part-of: kube-otel-stack
    chart: kube-otel-stack-0.4.1
    release: "kube-otel-stack"
    heritage: "Helm"
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    port: https
    scheme: https
    metricRelabelings:
      - action: drop
        regex: apiserver_request_duration_seconds_bucket;(0.15|0.2|0.3|0.35|0.4|0.45|0.6|0.7|0.8|0.9|1.25|1.5|1.75|2|3|3.5|4|4.5|6|7|8|9|15|25|40|50)
        sourceLabels:
        - __name__
        - le
    tlsConfig:
      caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      serverName: kubernetes
      insecureSkipVerify: false
  jobLabel: component
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      component: apiserver
      provider: kubernetes
---
# Source: kube-otel-stack/templates/exporters/kube-controller-manager/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kube-otel-stack-kube-controller-manager
  namespace: k8s-metrics
  labels:
    app: kube-otel-stack-kube-controller-manager
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: kube-otel-stack
    app.kubernetes.io/version: "0.4.1"
    app.kubernetes.io/part-of: kube-otel-stack
    chart: kube-otel-stack-0.4.1
    release: "kube-otel-stack"
    heritage: "Helm"
spec:
  jobLabel: jobLabel
  selector:
    matchLabels:
      app: kube-otel-stack-kube-controller-manager
      release: "kube-otel-stack"
  namespaceSelector:
    matchNames:
      - "kube-system"
  endpoints:
  - port: http-metrics
    bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    scheme: https
    tlsConfig:
      caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecureSkipVerify: true
---
# Source: kube-otel-stack/templates/exporters/kube-etcd/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kube-otel-stack-kube-etcd
  namespace: k8s-metrics
  labels:
    app: kube-otel-stack-kube-etcd
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: kube-otel-stack
    app.kubernetes.io/version: "0.4.1"
    app.kubernetes.io/part-of: kube-otel-stack
    chart: kube-otel-stack-0.4.1
    release: "kube-otel-stack"
    heritage: "Helm"
spec:
  jobLabel: jobLabel
  selector:
    matchLabels:
      app: kube-otel-stack-kube-etcd
      release: "kube-otel-stack"
  namespaceSelector:
    matchNames:
      - "kube-system"
  endpoints:
  - port: http-metrics
    bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
---
# Source: kube-otel-stack/templates/exporters/kube-proxy/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kube-otel-stack-kube-proxy
  namespace: k8s-metrics
  labels:
    app: kube-otel-stack-kube-proxy
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: kube-otel-stack
    app.kubernetes.io/version: "0.4.1"
    app.kubernetes.io/part-of: kube-otel-stack
    chart: kube-otel-stack-0.4.1
    release: "kube-otel-stack"
    heritage: "Helm"
spec:
  jobLabel: jobLabel
  selector:
    matchLabels:
      app: kube-otel-stack-kube-proxy
      release: "kube-otel-stack"
  namespaceSelector:
    matchNames:
      - "kube-system"
  endpoints:
  - port: http-metrics
    bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
---
# Source: kube-otel-stack/templates/servicemonitors.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kube-otel-stack-metrics-collector
  labels:
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: kube-otel-stack
    app.kubernetes.io/version: "0.4.1"
    app.kubernetes.io/part-of: kube-otel-stack
    chart: kube-otel-stack-0.4.1
    release: "kube-otel-stack"
    heritage: "Helm"
spec:
  endpoints:
  - path: /metrics
    port: monitoring
  namespaceSelector:
    matchNames:
    - k8s-metrics
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-otel-stack-metrics-collector-monitoring
---
# Source: kube-otel-stack/templates/servicemonitors.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kube-otel-stack-metrics-targetallocator
  labels:
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: kube-otel-stack
    app.kubernetes.io/version: "0.4.1"
    app.kubernetes.io/part-of: kube-otel-stack
    chart: kube-otel-stack-0.4.1
    release: "kube-otel-stack"
    heritage: "Helm"
spec:
  endpoints:
  - path: /metrics
    port: targetallocation
  namespaceSelector:
    matchNames:
    - k8s-metrics
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-otel-stack-metrics-targetallocator
---
# Source: kube-otel-stack/templates/servicemonitors.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kube-otel-stack-operator
  labels:
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: kube-otel-stack
    app.kubernetes.io/version: "0.4.1"
    app.kubernetes.io/part-of: kube-otel-stack
    chart: kube-otel-stack-0.4.1
    release: "kube-otel-stack"
    heritage: "Helm"
spec:
  endpoints:
  - path: /metrics
    port: metrics
  namespaceSelector:
    matchNames:
    - k8s-metrics
  selector:
    matchLabels:
      app.kubernetes.io/name: opentelemetry-operator
